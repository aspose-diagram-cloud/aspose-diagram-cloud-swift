//
// SaveOptionsModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class SaveOptionsModel: Codable {

    public enum SaveFormat: String, Codable { 
        case VDX = "VDX"
        case VSX = "VSX"
        case VTX = "VTX"
        case TIFF = "TIFF"
        case PNG = "PNG"
        case BMP = "BMP"
        case EMF = "EMF"
        case JPEG = "JPEG"
        case PDF = "PDF"
        case XPS = "XPS"
        case GIF = "GIF"
        case HTML = "HTML"
        case SVG = "SVG"
        case SWF = "SWF"
        case XAML = "XAML"
        case VSDX = "VSDX"
        case VSTX = "VSTX"
        case VSSX = "VSSX"
        case VSDM = "VSDM"
        case VSSM = "VSSM"
        case VSTM = "VSTM"
    }
    public var saveFormat: SaveFormat?
    public var defaultFont: String?

public enum CodingKeys: String, CodingKey { 
        case saveFormat = "SaveFormat"
        case defaultFont = "DefaultFont"
    }

    public init(saveFormat: SaveFormat?, defaultFont: String?) {
        self.saveFormat = saveFormat
        self.defaultFont = defaultFont
    }

    // Encodable protocol methods
    
    public func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: String.self)
        
        try container.encodeIfPresent(saveFormat, forKey: "SaveFormat")
        try container.encodeIfPresent(defaultFont, forKey: "DefaultFont")
    }
    
    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)
        
        saveFormat = try container.decodeIfPresent(SaveFormat.self, forKey: "SaveFormat")
        defaultFont = try container.decodeIfPresent(String.self, forKey: "DefaultFont")
    }

}

