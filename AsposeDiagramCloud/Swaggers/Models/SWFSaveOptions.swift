//
// SWFSaveOptions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class SWFSaveOptions: SaveOptionsModel {

    public var pageCount: Int32?
    public var viewerIncluded: Bool?
    public var pageIndex: Int32?
    public var saveForegroundPagesOnly: Bool?

public enum CodingKeys: String, CodingKey {
        case pageCount = "PageCount"
        case viewerIncluded = "ViewerIncluded"
        case pageIndex = "PageIndex"
        case saveForegroundPagesOnly = "SaveForegroundPagesOnly"
    }

    public init(saveFormat: SaveFormat?, defaultFont: String?, pageCount: Int32?, viewerIncluded: Bool?, pageIndex: Int32?, saveForegroundPagesOnly: Bool?) {
        self.pageCount = pageCount
        self.viewerIncluded = viewerIncluded
        self.pageIndex = pageIndex
        self.saveForegroundPagesOnly = saveForegroundPagesOnly
        super.init(saveFormat: saveFormat, defaultFont: defaultFont)
    }

    // Encodable protocol methods
    
    public override func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: String.self)
        
        try container.encodeIfPresent(pageCount, forKey: "PageCount")
        try container.encodeIfPresent(viewerIncluded, forKey: "ViewerIncluded")
        try container.encodeIfPresent(pageIndex, forKey: "PageIndex")
        try container.encodeIfPresent(saveForegroundPagesOnly, forKey: "SaveForegroundPagesOnly")
        
        try super.encode(to: encoder)
    }

    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)
        
        pageCount = try container.decodeIfPresent(Int32.self, forKey: "PageCount")
        viewerIncluded = try container.decodeIfPresent(Bool.self, forKey: "ViewerIncluded")
        pageIndex = try container.decodeIfPresent(Int32.self, forKey: "PageIndex")
        saveForegroundPagesOnly = try container.decodeIfPresent(Bool.self, forKey: "SaveForegroundPagesOnly")
        
        try super.init(from: decoder)
    }

}

